'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace AJKontroller.webApiHelpers.bokemonHandler.Dal
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AJDNNDatabase")>  _
	Partial Public Class bokemonLinqDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Inserttblmonster(instance As tblmonster)
    End Sub
    Partial Private Sub Updatetblmonster(instance As tblmonster)
    End Sub
    Partial Private Sub Deletetblmonster(instance As tblmonster)
    End Sub
    Partial Private Sub InserttblmonsterList(instance As tblmonsterList)
    End Sub
    Partial Private Sub UpdatetblmonsterList(instance As tblmonsterList)
    End Sub
    Partial Private Sub DeletetblmonsterList(instance As tblmonsterList)
    End Sub
    Partial Private Sub InserttblmonsterToUser(instance As tblmonsterToUser)
    End Sub
    Partial Private Sub UpdatetblmonsterToUser(instance As tblmonsterToUser)
    End Sub
    Partial Private Sub DeletetblmonsterToUser(instance As tblmonsterToUser)
    End Sub
    Partial Private Sub InserttblmonsterDrakelist(instance As tblmonsterDrakelist)
    End Sub
    Partial Private Sub UpdatetblmonsterDrakelist(instance As tblmonsterDrakelist)
    End Sub
    Partial Private Sub DeletetblmonsterDrakelist(instance As tblmonsterDrakelist)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SiteSqlServer").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property tblmonsters() As System.Data.Linq.Table(Of tblmonster)
			Get
				Return Me.GetTable(Of tblmonster)
			End Get
		End Property
		
		Public ReadOnly Property tblmonsterLists() As System.Data.Linq.Table(Of tblmonsterList)
			Get
				Return Me.GetTable(Of tblmonsterList)
			End Get
		End Property
		
		Public ReadOnly Property tblmonsterToUsers() As System.Data.Linq.Table(Of tblmonsterToUser)
			Get
				Return Me.GetTable(Of tblmonsterToUser)
			End Get
		End Property
		
		Public ReadOnly Property tblmonsterDrakelists() As System.Data.Linq.Table(Of tblmonsterDrakelist)
			Get
				Return Me.GetTable(Of tblmonsterDrakelist)
			End Get
		End Property
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJ_getMonsterlistExt")>  _
		Public Function AJ_getMonsterlistExt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userid As System.Nullable(Of Integer)) As ISingleResult(Of AJ_getMonsterlistExtResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userid)
			Return CType(result.ReturnValue,ISingleResult(Of AJ_getMonsterlistExtResult))
		End Function
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblmonster")>  _
	Partial Public Class tblmonster
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Monsterid As Integer
		
		Private _Userid As System.Nullable(Of Integer)
		
		Private _timetonext As System.Nullable(Of Integer)
		
		Private _totalscore As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMonsteridChanging(value As Integer)
    End Sub
    Partial Private Sub OnMonsteridChanged()
    End Sub
    Partial Private Sub OnUseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUseridChanged()
    End Sub
    Partial Private Sub OntimetonextChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntimetonextChanged()
    End Sub
    Partial Private Sub OntotalscoreChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntotalscoreChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monsterid", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property Monsterid() As Integer
			Get
				Return Me._Monsterid
			End Get
			Set
				If ((Me._Monsterid = value)  _
							= false) Then
					Me.OnMonsteridChanging(value)
					Me.SendPropertyChanging
					Me._Monsterid = value
					Me.SendPropertyChanged("Monsterid")
					Me.OnMonsteridChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
		Public Property Userid() As System.Nullable(Of Integer)
			Get
				Return Me._Userid
			End Get
			Set
				If (Me._Userid.Equals(value) = false) Then
					Me.OnUseridChanging(value)
					Me.SendPropertyChanging
					Me._Userid = value
					Me.SendPropertyChanged("Userid")
					Me.OnUseridChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_timetonext", DbType:="Int")>  _
		Public Property timetonext() As System.Nullable(Of Integer)
			Get
				Return Me._timetonext
			End Get
			Set
				If (Me._timetonext.Equals(value) = false) Then
					Me.OntimetonextChanging(value)
					Me.SendPropertyChanging
					Me._timetonext = value
					Me.SendPropertyChanged("timetonext")
					Me.OntimetonextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalscore", DbType:="Int")>  _
		Public Property totalscore() As System.Nullable(Of Integer)
			Get
				Return Me._totalscore
			End Get
			Set
				If (Me._totalscore.Equals(value) = false) Then
					Me.OntotalscoreChanging(value)
					Me.SendPropertyChanging
					Me._totalscore = value
					Me.SendPropertyChanged("totalscore")
					Me.OntotalscoreChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblmonsterList")>  _
	Partial Public Class tblmonsterList
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _monId As Integer
		
		Private _monsternamn As String
		
		Private _monstersrc As String
		
		Private _monsterinfo As String
		
		Private _basepoint As System.Nullable(Of Integer)
		
		Private _bonus As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnmonIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnmonIdChanged()
    End Sub
    Partial Private Sub OnmonsternamnChanging(value As String)
    End Sub
    Partial Private Sub OnmonsternamnChanged()
    End Sub
    Partial Private Sub OnmonstersrcChanging(value As String)
    End Sub
    Partial Private Sub OnmonstersrcChanged()
    End Sub
    Partial Private Sub OnmonsterinfoChanging(value As String)
    End Sub
    Partial Private Sub OnmonsterinfoChanged()
    End Sub
    Partial Private Sub OnbasepointChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbasepointChanged()
    End Sub
    Partial Private Sub OnbonusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbonusChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property monId() As Integer
			Get
				Return Me._monId
			End Get
			Set
				If ((Me._monId = value)  _
							= false) Then
					Me.OnmonIdChanging(value)
					Me.SendPropertyChanging
					Me._monId = value
					Me.SendPropertyChanged("monId")
					Me.OnmonIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monsternamn", DbType:="NVarChar(50)")>  _
		Public Property monsternamn() As String
			Get
				Return Me._monsternamn
			End Get
			Set
				If (String.Equals(Me._monsternamn, value) = false) Then
					Me.OnmonsternamnChanging(value)
					Me.SendPropertyChanging
					Me._monsternamn = value
					Me.SendPropertyChanged("monsternamn")
					Me.OnmonsternamnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monstersrc", DbType:="NVarChar(250)")>  _
		Public Property monstersrc() As String
			Get
				Return Me._monstersrc
			End Get
			Set
				If (String.Equals(Me._monstersrc, value) = false) Then
					Me.OnmonstersrcChanging(value)
					Me.SendPropertyChanging
					Me._monstersrc = value
					Me.SendPropertyChanged("monstersrc")
					Me.OnmonstersrcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monsterinfo", DbType:="NVarChar(500)")>  _
		Public Property monsterinfo() As String
			Get
				Return Me._monsterinfo
			End Get
			Set
				If (String.Equals(Me._monsterinfo, value) = false) Then
					Me.OnmonsterinfoChanging(value)
					Me.SendPropertyChanging
					Me._monsterinfo = value
					Me.SendPropertyChanged("monsterinfo")
					Me.OnmonsterinfoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_basepoint", DbType:="Int")>  _
		Public Property basepoint() As System.Nullable(Of Integer)
			Get
				Return Me._basepoint
			End Get
			Set
				If (Me._basepoint.Equals(value) = false) Then
					Me.OnbasepointChanging(value)
					Me.SendPropertyChanging
					Me._basepoint = value
					Me.SendPropertyChanged("basepoint")
					Me.OnbasepointChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonus", DbType:="Int")>  _
		Public Property bonus() As System.Nullable(Of Integer)
			Get
				Return Me._bonus
			End Get
			Set
				If (Me._bonus.Equals(value) = false) Then
					Me.OnbonusChanging(value)
					Me.SendPropertyChanging
					Me._bonus = value
					Me.SendPropertyChanged("bonus")
					Me.OnbonusChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblmonsterToUser")>  _
	Partial Public Class tblmonsterToUser
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _id As Integer
		
		Private _monid As System.Nullable(Of Integer)
		
		Private _userid As System.Nullable(Of Integer)
		
		Private _MonsterScore As System.Nullable(Of Integer)
		
		Private _monlevel As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnmonidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmonidChanged()
    End Sub
    Partial Private Sub OnuseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuseridChanged()
    End Sub
    Partial Private Sub OnMonsterScoreChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonsterScoreChanged()
    End Sub
    Partial Private Sub OnmonlevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmonlevelChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property id() As Integer
			Get
				Return Me._id
			End Get
			Set
				If ((Me._id = value)  _
							= false) Then
					Me.OnidChanging(value)
					Me.SendPropertyChanging
					Me._id = value
					Me.SendPropertyChanged("id")
					Me.OnidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monid", DbType:="Int")>  _
		Public Property monid() As System.Nullable(Of Integer)
			Get
				Return Me._monid
			End Get
			Set
				If (Me._monid.Equals(value) = false) Then
					Me.OnmonidChanging(value)
					Me.SendPropertyChanging
					Me._monid = value
					Me.SendPropertyChanged("monid")
					Me.OnmonidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="Int")>  _
		Public Property userid() As System.Nullable(Of Integer)
			Get
				Return Me._userid
			End Get
			Set
				If (Me._userid.Equals(value) = false) Then
					Me.OnuseridChanging(value)
					Me.SendPropertyChanging
					Me._userid = value
					Me.SendPropertyChanged("userid")
					Me.OnuseridChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonsterScore", DbType:="Int")>  _
		Public Property MonsterScore() As System.Nullable(Of Integer)
			Get
				Return Me._MonsterScore
			End Get
			Set
				If (Me._MonsterScore.Equals(value) = false) Then
					Me.OnMonsterScoreChanging(value)
					Me.SendPropertyChanging
					Me._MonsterScore = value
					Me.SendPropertyChanged("MonsterScore")
					Me.OnMonsterScoreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monlevel", DbType:="Int")>  _
		Public Property monlevel() As System.Nullable(Of Integer)
			Get
				Return Me._monlevel
			End Get
			Set
				If (Me._monlevel.Equals(value) = false) Then
					Me.OnmonlevelChanging(value)
					Me.SendPropertyChanging
					Me._monlevel = value
					Me.SendPropertyChanged("monlevel")
					Me.OnmonlevelChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblmonsterDrakelist")>  _
	Partial Public Class tblmonsterDrakelist
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _drakId As Integer
		
		Private _draknamn As String
		
		Private _draksrc As String
		
		Private _drakinfo As String
		
		Private _drakbasepoint As System.Nullable(Of Integer)
		
		Private _drakbonus As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OndrakIdChanging(value As Integer)
    End Sub
    Partial Private Sub OndrakIdChanged()
    End Sub
    Partial Private Sub OndraknamnChanging(value As String)
    End Sub
    Partial Private Sub OndraknamnChanged()
    End Sub
    Partial Private Sub OndraksrcChanging(value As String)
    End Sub
    Partial Private Sub OndraksrcChanged()
    End Sub
    Partial Private Sub OndrakinfoChanging(value As String)
    End Sub
    Partial Private Sub OndrakinfoChanged()
    End Sub
    Partial Private Sub OndrakbasepointChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndrakbasepointChanged()
    End Sub
    Partial Private Sub OndrakbonusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndrakbonusChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drakId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property drakId() As Integer
			Get
				Return Me._drakId
			End Get
			Set
				If ((Me._drakId = value)  _
							= false) Then
					Me.OndrakIdChanging(value)
					Me.SendPropertyChanging
					Me._drakId = value
					Me.SendPropertyChanged("drakId")
					Me.OndrakIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_draknamn", DbType:="NVarChar(50)")>  _
		Public Property draknamn() As String
			Get
				Return Me._draknamn
			End Get
			Set
				If (String.Equals(Me._draknamn, value) = false) Then
					Me.OndraknamnChanging(value)
					Me.SendPropertyChanging
					Me._draknamn = value
					Me.SendPropertyChanged("draknamn")
					Me.OndraknamnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_draksrc", DbType:="NVarChar(250)")>  _
		Public Property draksrc() As String
			Get
				Return Me._draksrc
			End Get
			Set
				If (String.Equals(Me._draksrc, value) = false) Then
					Me.OndraksrcChanging(value)
					Me.SendPropertyChanging
					Me._draksrc = value
					Me.SendPropertyChanged("draksrc")
					Me.OndraksrcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drakinfo", DbType:="NVarChar(500)")>  _
		Public Property drakinfo() As String
			Get
				Return Me._drakinfo
			End Get
			Set
				If (String.Equals(Me._drakinfo, value) = false) Then
					Me.OndrakinfoChanging(value)
					Me.SendPropertyChanging
					Me._drakinfo = value
					Me.SendPropertyChanged("drakinfo")
					Me.OndrakinfoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drakbasepoint", DbType:="Int")>  _
		Public Property drakbasepoint() As System.Nullable(Of Integer)
			Get
				Return Me._drakbasepoint
			End Get
			Set
				If (Me._drakbasepoint.Equals(value) = false) Then
					Me.OndrakbasepointChanging(value)
					Me.SendPropertyChanging
					Me._drakbasepoint = value
					Me.SendPropertyChanged("drakbasepoint")
					Me.OndrakbasepointChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drakbonus", DbType:="Int")>  _
		Public Property drakbonus() As System.Nullable(Of Integer)
			Get
				Return Me._drakbonus
			End Get
			Set
				If (Me._drakbonus.Equals(value) = false) Then
					Me.OndrakbonusChanging(value)
					Me.SendPropertyChanging
					Me._drakbonus = value
					Me.SendPropertyChanged("drakbonus")
					Me.OndrakbonusChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	Partial Public Class AJ_getMonsterlistExtResult
		
		Private _monId As Integer
		
		Private _monsternamn As String
		
		Private _monstersrc As String
		
		Private _basepoint As System.Nullable(Of Integer)
		
		Private _bonus As System.Nullable(Of Integer)
		
		Private _monsterinfo As String
		
		Private _MonsterScore As System.Nullable(Of Integer)
		
		Private _monlevel As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monId", DbType:="Int NOT NULL")>  _
		Public Property monId() As Integer
			Get
				Return Me._monId
			End Get
			Set
				If ((Me._monId = value)  _
							= false) Then
					Me._monId = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monsternamn", DbType:="NVarChar(50)")>  _
		Public Property monsternamn() As String
			Get
				Return Me._monsternamn
			End Get
			Set
				If (String.Equals(Me._monsternamn, value) = false) Then
					Me._monsternamn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monstersrc", DbType:="NVarChar(250)")>  _
		Public Property monstersrc() As String
			Get
				Return Me._monstersrc
			End Get
			Set
				If (String.Equals(Me._monstersrc, value) = false) Then
					Me._monstersrc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_basepoint", DbType:="Int")>  _
		Public Property basepoint() As System.Nullable(Of Integer)
			Get
				Return Me._basepoint
			End Get
			Set
				If (Me._basepoint.Equals(value) = false) Then
					Me._basepoint = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonus", DbType:="Int")>  _
		Public Property bonus() As System.Nullable(Of Integer)
			Get
				Return Me._bonus
			End Get
			Set
				If (Me._bonus.Equals(value) = false) Then
					Me._bonus = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monsterinfo", DbType:="NVarChar(500)")>  _
		Public Property monsterinfo() As String
			Get
				Return Me._monsterinfo
			End Get
			Set
				If (String.Equals(Me._monsterinfo, value) = false) Then
					Me._monsterinfo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonsterScore", DbType:="Int")>  _
		Public Property MonsterScore() As System.Nullable(Of Integer)
			Get
				Return Me._MonsterScore
			End Get
			Set
				If (Me._MonsterScore.Equals(value) = false) Then
					Me._MonsterScore = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monlevel", DbType:="Int")>  _
		Public Property monlevel() As System.Nullable(Of Integer)
			Get
				Return Me._monlevel
			End Get
			Set
				If (Me._monlevel.Equals(value) = false) Then
					Me._monlevel = value
				End If
			End Set
		End Property
	End Class
End Namespace
